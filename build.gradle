/*
 * This Work is in the public domain and is provided on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied,
 * including, without limitation, any warranties or conditions of TITLE,
 * NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE.
 * You are solely responsible for determining the appropriateness of using
 * this Work and assume any risks associated with your use of this Work.
 *
 * This Work includes contributions authored by David E. Jones, not as a
 * "work for hire", who hereby disclaims any copyright to the same.
 */

tasks.withType(Compile) {
    options.compilerArgs << "-Xlint:unchecked"
}

apply plugin: 'groovy'

sourceCompatibility = '1.6'
archivesBaseName = 'moqui'
def moquiDir = file(projectDir.absolutePath + '/../../..')
def frameworkDir = file(moquiDir.absolutePath + '/framework')

    //classpath += fileTree(dir: projectDir.absolutePath,
            //includes: ['data/**', 'entity/**', 'screen/**', 'service/**', 'template/**', 'xsd/**'])

// maybe in the future: repositories { mavenCentral() }
repositories {
    flatDir name: 'localLib', dirs: projectDir.absolutePath + '/lib'
    flatDir name: 'moquiLibSearch', dirs: frameworkDir.absolutePath + '/lib/search'
    flatDir name: 'moquiBuildLib', dirs: frameworkDir.absolutePath + '/build/libs'
    flatDir name: 'moquiLib', dirs: frameworkDir.absolutePath + '/lib'
}

configurations {
    testRuntime
}

dependencies {
    // groovy dependencies (just the library to compile with)
    groovy group: 'org.codehaus.groovy', name: 'groovy-all', version: '2.1.3' // Apache 2.0

    compile fileTree(dir: frameworkDir.absolutePath + '/lib', includes: ['*.jar'])
    compile fileTree(dir: frameworkDir.absolutePath + '/lib/search', includes: ['*.jar'])
    compile name: 'moqui-framework', version: '1.3.0' // Public Domain
    compile name: 'poi', version: '3.9'
    }

// by default the Java plugin runs test on build, change to not do that (only run test if explicit task)
check.dependsOn.remove('test')
build.dependsOn.remove('test')

test {
    systemProperty 'moqui.runtime', '../..'
    systemProperty 'moqui.conf', 'conf/MoquiDevConf.xml'
    systemProperty 'moqui.init.static', 'true'

    testLogging.showStandardStreams = true
    logger.lifecycle("did it get here(rc)???")
    logger.lifecycle("classpath: ${classpath.collect {File file -> file.absolutePath + '\n'}}")


    beforeTest { descriptor ->
        logger.lifecycle("Running test: ${descriptor}")
    }
}

jar {
    // this is necessary otherwise jar won't build when war plugin is applied
    enabled = true
    appendix = 'rcherbals'
    manifest { attributes 'Implementation-Title': 'DynamoDB Entity', 'Implementation-Version': '1.0.0' }
    from sourceSets.main.output
}

task show << {
    logger.lifecycle("In show task")
    logger.lifecycle("configurations.runtime: ${configurations.runtime.collect {File file -> file.name}}")
 configurations.runtime.each() {File file -> println file.name}
}
